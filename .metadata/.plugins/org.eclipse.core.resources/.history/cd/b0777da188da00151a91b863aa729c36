'
'   This document contains an API for use with the Schedules Direct
'   open source television data service.
'   @author: Hayden McParlane
'   @creation-date: 2.18.2016
Function SchedulesDirectBaseJsonUrl() as String
    return "https://json.schedulesdirect.org/20141201"
End Function

Function SchedulesDirectJSONTokenUrl() as String
    return SchedulesDirectBaseJsonUrl() + "/token"
End Function

Function SearchSchedulesDirect() as void
    ' TODO: Some of these functions will need to be removed and placed elsewhere. I.e, GetSchedulesDirectAccountStatus() should be called
    ' when the application is first launched from the Roku shell (home screen). That way, account status can be checked asynchronously
    ' to ensure it's ready when the user begins to use it (or, if it's not, the user can be prompted to enter updated account info some
    ' how.
    InitSchedulesDirectCommunication()
    SchedulesDirectTokenize()    
End Function

' TODO: GetSchedulesDirectAccountStatus()
' TODO: GetSchedulesDirectVersionInfo()
' TODO: GetSchedulesDirectServiceList()
' TODO: CheckSchedulesDirectAccountStatus()
' TODO: CheckSchedulesDirectClientVersion()

' TODO: Later on, ensure tokenize implements token refresh if needed, etc
Function SchedulesDirectTokenize() as void ' This may need to be changed such that it returns something
                            ' such as an associative array
    if HasSchedulesDirectToken()        
        LogInfo("Token already present. Skipping tokenize.")
    else          
        LogInfo("Tokenizing with Schedules Direct")
        headers = CreateObject("roAssociativeArray")
        body = CreateObject("roAssociativeArray")
        
        ' 1. Populate headers and body for network packet
        headers.AddReplace("User-Agent",SchedulesDirectUserAgentHeader())
        body.AddReplace("username", SchedulesDirectUsername())
        body.AddReplace("password", SchedulesDirectPassword())        
        
        ' 2. Make request to API
        response = PostRequest(SchedulesDirectJSONTokenUrl(), headers, body)
        
        ' 3. Check server status code (not HTTP status, that's checked in network module)            
        if response.headers["code"] = 3000
            LogErrorObj("Schedules Direct server offline. Try again later.", response.json)
            ' TODO: Program shouldn't be halted. What should be done here?
            stop
        else if response.json["code"] <> 0
            LogErrorObj("Schedules Direct response status code non-zero (Abnormal).", response.json)
            stop
        end if
    
        ' 4. Store token in system variable        
        AddUpdateSchedulesDirectToken(response.json["token"])            
        LogInfo("Tokenize Complete Successfully -> " + GetSchedulesDirectToken())
    end if   
End Function

Function GetCableHeadends(country as String, zipcode as String)
    if HasSchedulesDirectCableHeadends()        
        LogInfo("Schedules Direct cable headends already present. Skipping cable headends acquisition.")
    else          
        LogInfo("Tokenizing with Schedules Direct")
        headers = CreateObject("roAssociativeArray")
        body = CreateObject("roAssociativeArray")
        
        ' 1. Populate headers and body for network packet
        headers.AddReplace("User-Agent",SchedulesDirectUserAgentHeader())
        body.AddReplace("username", SchedulesDirectUsername())
        body.AddReplace("password", SchedulesDirectPassword())        
        
        ' 2. Make request to API
        response = PostRequest(SchedulesDirectJSONTokenUrl(), headers, body)
        
        ' 3. Check server status code (not HTTP status, that's checked in network module)            
        if response.headers["code"] = 3000
            LogErrorObj("Schedules Direct server offline. Try again later.", response.json)
            ' TODO: Program shouldn't be halted. What should be done here?
            stop
        else if response.json["code"] <> 0
            LogErrorObj("Schedules Direct response status code non-zero (Abnormal).", response.json)
            stop
        end if
    
        ' 4. Store token in system variable        
        AddUpdateSchedulesDirectToken(response.json["token"])        
    ' TODO: *** NEXT MAIN TASK *** extract information from response, store token, proceed with communication
    ' with schedules direct to receive data to display in TV Schedule "view"
        LogInfo("Tokenize Complete Successfully -> " + GetSchedulesDirectToken())
    end if  
End Function

Function SchedulesDirectUsername() as String
    return Username()
End Function

Function SchedulesDirectPassword() as String
    return Sha1Digest(RawPassword())
End Function

Function SchedulesDirectUserAgentHeader() as String
    return "RokuStreak"
End Function