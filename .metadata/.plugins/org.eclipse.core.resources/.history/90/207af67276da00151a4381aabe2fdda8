'
'   This document contains an API for use with the Schedules Direct
'   open source television data service.
'   @author: Hayden McParlane
'   @creation-date: 2.18.2016
Function SchedulesDirectBaseJsonUrl() as String
    return "https://json.schedulesdirect.org/20141201"
End Function

Function SchedulesDirectJSONTokenUrl() as String
    return SchedulesDirectBaseJsonUrl() + "/token"
End Function

Function SearchSchedulesDirect() as void
    InitSchedulesDirectCommunication()
    SchedulesDirectTokenize()
End Function

Function SchedulesDirectTokenize() as void ' This may need to be changed such that it returns something
                            ' such as an associative array
    if HasSchedulesDirectToken()
        ' Do nothing
    else    
        LogInfo("Tokenizing with Schedules Direct")
        headers = CreateObject("roAssociativeArray")
        body = CreateObject("roAssociativeArray")
        headers.AddReplace("User-Agent",SchedulesDirectUserAgentHeader())
        body.AddReplace("username", SchedulesDirectUsername())
        body.AddReplace("password", SchedulesDirectPassword())        
    
        response = PostRequest(SchedulesDirectJSONTokenUrl(), headers, body)
            
        if response.headers["response"] = "SERVICE_OFFLINE" or response.headers["code"] = 3000
            LogErrorObj("Schedules direct server offline. Try again later.", response.json)
            ' TODO: Program shouldn't be halted. What should be done here?
            stop
        else if response.json["code"] <> 0
            LogErrorObj("Response status code non-zero (Abnormal).", response.json)
            stop
        end if          
    
        LogDebug("Testing whether codes are returned as strings or integers...")
        LogDebug(response.json["code"])
    
        ' Add token to system variable
        AddUpdateSchedulesDirectToken(response.json["token"])
        print GetSchedulesDirectToken()
    ' TODO: *** NEXT MAIN TASK *** extract information from response, store token, proceed with communication
    ' with schedules direct to receive data to display in TV Schedule "view" 
    end if
    
    LogInfo("Tokenize Complete Successfully")    
End Function

Function AddUpdateSchedulesDirectToken(token as String) as void
    if SchedulesDirectObj() = invalid
        SchedulesDirectObj()
    SchedulesDirectHeaders().token = token
End Function

Function SchedulesDirectToken() as String
    return GetSchedulesDirectHeaders().token
End Function

Function SchedulesDirectHeaders() as Object
    if m.schedulesAPI = invalid
        m.schedulesAPI = CreateObject("roAssociativeArray")
    end if
    obj = SchedulesDirectObj()
    return obj.headers
End Function

Function SchedulesDirectObj() as Object
    if m.schedulesAPI = invalid
        m.schedulesAPI = CreateObject("roAssociativeArray")
    end if
    return m.schedulesAPI
End Function

Function HasSchedulesDirectToken() as Boolean
    result = False    
    if GetSchedulesDirectToken() = invalid
        ' Do nothing
    else
        result = True
    end if
    return result
End Function

Function InitSchedulesDirectCommunication() as void
    
End Function

Function SchedulesDirectUsername() as String
    return Username()
End Function

Function SchedulesDirectPassword() as String
    return Sha1Digest(RawPassword())
End Function

Function SchedulesDirectUserAgentHeader() as String
    return "RokuStreak"
End Function